module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,      // AVR RX buffer full
    output io_led [8],   // LEDs on IO Shield

    input io_dip [3],     // DIP switches on IO Shield
    input carry,
    input sum,
    output a,
    output b,
    output c
  ) {

  sig rst;                  // reset signal
  sig result[4];

  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
 
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
 
    led = 8h00;             // turn LEDs off
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
 
    io_led[7:0] = 8h00;    // turn LEDs off
    io_led[0] = io_dip[0];  //first 3 led show input value
    io_led[1] = io_dip[1];
    io_led[2] = io_dip[2];
    io_led[3] = sum; //actual sum
    io_led[4] = carry; //actual carry
    a = io_dip[0];
    b = io_dip[1];
    c = io_dip[2];
    
    result = io_dip[0] + io_dip[1] + io_dip[2];
    if (result==3){
      io_led[7] = 1; //expected carry
      io_led[6] = 1; //expected sum
    
  }
    else if (result == 2){
    io_led[7] = 1; 
    io_led[6] = 0;
  }
    else if (result == 1){
    io_led[7] = 0;
    io_led[6] = 1;
      
  }
    else {
    io_led[7] = 0;
    io_led[6] = 0;
  }
}
}